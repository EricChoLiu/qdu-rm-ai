name: build

on:
  push:
    branches: [ "2023" ]
  pull_request:
    branches: [ "2023" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    permissions:
      actions: write
      contents: write

    steps:
    - uses: actions/checkout@v3

    - name: Install Dependancy
      run: cd ${{github.workspace}} && python3 ./utils/project.py env

    - name: Init submodule
      run: cd ${{github.workspace}} && python3 ./utils/project.py init

    - name: Build
      # Build your program with the given configuration
      run: cd ${{github.workspace}} && python3 ./utils/project.py build

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: cd ${{github.workspace}} && python3 ./utils/project.py test
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      # run: ctest -C ${{env.BUILD_TYPE}}

    - name: Pack runtime
      run: cd ${{github.workspace}} && zip -r ${{github.workspace}}/runtime.zip ./runtime ./build/install

    - name: Create release
      run:  echo "release_name=$(date +v%Y.%m.%d.vv%H.%M)" >> $GITHUB_ENV

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{env.release_name}}
        name: Release ${{env.release_name}}
        draft: false
        prerelease: false
        files: ${{github.workspace}}/runtime.zip